// 정수 n을 입력받아 n의 약수를 모두 더한 값을 리턴하는 함수, solution을 완성해주세요.

// 제한 사항
// n은 0 이상 3000이하인 정수입니다.
// 입출력 예
// n	return
// 12	28
// 5	6
// 입출력 예 설명
// 입출력 예 #1
// 12의 약수는 1, 2, 3, 4, 6, 12입니다. 이를 모두 더하면 28입니다.

// 입출력 예 #2
// 5의 약수는 1, 5입니다. 이를 모두 더하면 6입니다.

function solution(n) {
    var answer = 0;
    for (let i = 1; i <= n; i++) {
        if (n % i === 0) {
            answer += i;
        }
    }
    return answer;
}

// 다른 답

function solution(n) {
    var answer = 0;
    let i;
    for (i = 1; i <= Math.sqrt(n); i++) { // 제곱근 ex) n이 100이면 Math.sqrt(n)은 10
        if (!(n % i)) {
            answer += (i + n / i); // 결론적으론 나누는 수와 몫을 더해주는 원리
        }
    }
    i--;
    return (i === n / i) ? answer - i : answer; // 위에서 나누는 수와 몫이 같아지면 같은 숫자를 두 번 더하는 거니까 3항 연산자로 방지.
}

// 100 / 1 = 100
// 100 / 2 = 50
// 100 / 4 = 25
// 100 / 5 = 20
// 100 / 10 = 10

// 100의 약수는 1,2,4,5,10,20,25,50,100 이다

